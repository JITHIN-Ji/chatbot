[
  {
    "doc_id": "Screenshot 2025-07-11 005733.png",
    "chunk_text": "Google\n\nwhat is multithreading in java\n\nAll Images Videos Short videos Forums Shopping More ~\n\n+> Aloverview\n\u00a9 Listen\n\nMultithreading in Java is a programming concept that allows for the\nconcurrent execution of multiple parts of a program, known as threads. This\nenables a single program to perform multiple tasks simultaneously, leading to\nincreased efficiency and responsiveness, especially in applications that\nrequire background processing, user interface responsiveness, or optimal\nutilization of multi-core processors.\n\nKey aspects of multithreading in Java:\n\nThreads:\n\nA thread is a lightweight sub-process within a program, representing an independent\npath of execution. Each thread can run concurrently with other threads within the\nsame program.\n\nConcurrency:\n\nMultithreading achieves concurrency, meaning that multiple tasks appear to be\n\n\u2018executing at the same time, even if they are rapidly switching between execution on a\n\nsingle processor. On multi-core systems, threads can truly exe",
    "chunk_index": 0,
    "page": 1,
    "label": "1"
  },
  {
    "doc_id": "Screenshot 2025-07-11 005733.png",
    "chunk_text": "dly switching between execution on a\n\nsingle processor. On multi-core systems, threads can truly execute in parallel on\ndifferent cores.\n\nShared Memory:\n\nThreads within the same process share the same memory space, which allows for\nefficient data sharing but also necessitates careful management to prevent data\ncorruption through synchronization mechanisms.\n\nCreation of Threads:\n\nIn Java, threads can be created by either extending the Thread class or by\nimplementing the Runnable interface. Implementing Runnable is generally\n\nMultithreading in Java - Naukri Code 36\n12 Jun 2025 \u2014 What is Multithreading in Java\nMultithreading programming in Java is a featur\n\n@ Naukcicom\n",
    "chunk_index": 1,
    "page": 1,
    "label": "1"
  },
  {
    "doc_id": "Screenshot 2025-07-11 005733.png",
    "chunk_text": "Google\n\nwhat is multithreading in java\n\nAll Images Videos Short videos Forums Shopping More ~\n\n+> Aloverview\n\u00a9 Listen\n\nMultithreading in Java is a programming concept that allows for the\nconcurrent execution of multiple parts of a program, known as threads. This\nenables a single program to perform multiple tasks simultaneously, leading to\nincreased efficiency and responsiveness, especially in applications that\nrequire background processing, user interface responsiveness, or optimal\nutilization of multi-core processors.\n\nKey aspects of multithreading in Java:\n\nThreads:\n\nA thread is a lightweight sub-process within a program, representing an independent\npath of execution. Each thread can run concurrently with other threads within the\nsame program.\n\nConcurrency:\n\nMultithreading achieves concurrency, meaning that multiple tasks appear to be\n\n\u2018executing at the same time, even if they are rapidly switching between execution on a\n\nsingle processor. On multi-core systems, threads can truly exe",
    "chunk_index": 0,
    "page": 1,
    "label": "1"
  },
  {
    "doc_id": "Screenshot 2025-07-11 005733.png",
    "chunk_text": "dly switching between execution on a\n\nsingle processor. On multi-core systems, threads can truly execute in parallel on\ndifferent cores.\n\nShared Memory:\n\nThreads within the same process share the same memory space, which allows for\nefficient data sharing but also necessitates careful management to prevent data\ncorruption through synchronization mechanisms.\n\nCreation of Threads:\n\nIn Java, threads can be created by either extending the Thread class or by\nimplementing the Runnable interface. Implementing Runnable is generally\n\nMultithreading in Java - Naukri Code 36\n12 Jun 2025 \u2014 What is Multithreading in Java\nMultithreading programming in Java is a featur\n\n@ Naukcicom\n",
    "chunk_index": 1,
    "page": 1,
    "label": "1"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "MAIN PROJECT REPORT\nON\nSAFE PULSE : REAL TIME HUMAN TRACKING AND EMERGENCY\nALERT SYSTEM\nSubmitted By\nJITHIN T (CEC23MCA-2021)\nin partial fulfillment for the award of the degree of\nMaster of Computer Applications\nDEPARTMENT OF COMPUTER ENGINEERING\nCOLLEGE OF ENGINEERING, CHERTHALA\nALAPPUZHA - 41\nAPJ ABDUL KALAM TECHNOLOGICAL UNIVERSITY\nMAY 2025\n",
    "chunk_index": 0,
    "page": 1,
    "label": "1"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "MAIN PROJECT REPORT ON\nSAFE PULSE : REAL TIME HUMAN TRACKING AND EMERGENCY\nALERT SYSTEM\nSubmitted By\nJITHIN T (CEC23MCA-2021)\nin partial fulfillment of the requirements for the award of the degree of\nMaster of Computer Applications\nof\nAPJ Abdul Kalam Technological University\nDEPARTMENT OF COMPUTER ENGINEERING\nCOLLEGE OF ENGINEERING, CHERTHALA\nALAPPUZHA-41\nAPJ ABDUL KALAM TECHNOLOGICAL UNIVERSITY\nMAY 2025\n",
    "chunk_index": 1,
    "page": 2,
    "label": "2"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "DEPARTMENT OF COMPUTER ENGINEERING\nCOLLEGE OF ENGINEERING, CHERTHALA\nALAPPUZHA-688541\nC E R T I F I C A T E\nThis is to certify that, the project report titled \"SAFE PULSE : REAL TIME HUMAN\nTRACKING AND EMERGENCY ALERT SYSTEM\" is a bonafide record of the 20MCA246\nMain Project presented by JITHIN T (CEC23MCA-2021), Fourth semester Master of Computer\nApplication student, under our guidance and supervision, in partial fulfillment of the requirements\nfor the award of the degree, Master of Computer Application of APJ Abdul Kalam Techno-\nlogical University during the academic year 2024-2025.\nGuide\nCo-ordinator\nHOD\nDr. Preetha Theresa Joy\nMrs.Renjusha Aravind\nDr. Preetha Theresa Joy\nProfessor\nAssistant Professor\nProfessor\nDept.of Computer Engg.\nDept.of Computer Engg.\nDept.of Computer Engg.\n",
    "chunk_index": 2,
    "page": 3,
    "label": "3"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "ACKNOWLEDGEMENT\nThis work would not have been possible without the support of many people. First and the\nforemost, we give thanks to Almighty God who gave us the inner strength, resource and ability to\ncomplete our project successfully.\nI, Jithin T would like to thank Dr. Jaya V.L, our Principal, who has provided with the best\nfacilities and atmosphere for the project completion and presentation.I would also like to thank\nour HoD Dr. Preetha Theresa Joy (Professor, Department of Computer Engineering), our project\ncoordinator Mrs.Renjusha Aravind (Assistant Professor, Department of Computer Engineering),\nand our guide Dr. Preetha Theresa Joy (Professor, Department of Computer Engineering) for the\nhelp extended and also for the encouragement and support given to us while doing the project.\nI would like to thank my dear friends for extending their cooperation and encouragement\nthroughout the project work, without which we would never have completed the project this\nwell.Thank you all for ",
    "chunk_index": 3,
    "page": 4,
    "label": "4"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "e project work, without which we would never have completed the project this\nwell.Thank you all for your love and also for being very understanding.\ni\n",
    "chunk_index": 4,
    "page": 4,
    "label": "4"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "DECLARATION\nI hereby declare that the project \u201cSAFE PULSE : REAL TIME HUMAN TRACKING\nAND EMERGENCY ALERT SYSTEM\u201d is a bonafide work done by me during the academic\nyear 2024-2025 under the guidance of Dr. Preetha Theresa Joy, Assistant Professor at College\nof Engineering, Cherthala and this report has not been previously formed the basis for the award\nof any degree, diploma, fellowship or any other similar title or recognition in any other university.\nJITHIN T (CEC23MCA-2021)\n(07/04/2025)\ni\n",
    "chunk_index": 5,
    "page": 5,
    "label": "5"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "ABSTRACT\nSafePulse is a mobile-based safety application designed to provide real-time protection and\nemergency support for users, including children, elderly individuals, specially-abled persons, and\nthose in high-risk situations. The app integrates features like fall detection, geo-fencing, SOS\nflashlight, emergency contact alerts, and unauthorized access detection. It leverages Android tech-\nnologies, Google Maps API, Firebase, and SMS services to ensure quick response and continuous\nmonitoring. SafePulse enhances personal safety through proactive alerts and seamless user inter-\naction, offering a reliable platform for real-time emergency management.\nii\n",
    "chunk_index": 6,
    "page": 6,
    "label": "6"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "Contents\n1\nINTRODUCTION\n1\n2\nPROBLEM STATEMENT\n2\n2.1\nProblem Statement\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n2\n2.2\nObjective\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n2\n3\nEXISTING SYSTEM\n4\n3.1\nBasic SOS Apps: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n4\n3.2\nGPS Tracking Apps:\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n4\n3.3\nNo Unified Platform: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n4\n4\nLITERATURE SURVEY\n5\n4.1\nBase Paper 1\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n5\n4.2\nBase Paper 2\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n5\n4.3\nBase Paper 3\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n6\n4.4\nBase Paper 4\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n6\n4.5\nBase Paper 5\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n7\n5\nP",
    "chunk_index": 7,
    "page": 7,
    "label": "7"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": ". .\n6\n4.5\nBase Paper 5\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n7\n5\nPROPOSED SYSTEM\n8\n5.1\nSolution . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n8\n6\nSYSTEM REQUIREMENT SPECIFICATION\n10\n6.1\nOverall Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n10\n6.1.1\nProduct Perspective . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n10\n6.1.2\nProduct Function . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n10\niii\n",
    "chunk_index": 8,
    "page": 7,
    "label": "7"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "6.2\nSystem Requirements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n11\n6.2.1\nAndroid Studio . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n11\n6.2.2\nKotlin . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n12\n6.2.3\nFirebase . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n12\n6.2.4\nGoogle Maps API\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n12\n6.2.5\nSMS and Location Services\n. . . . . . . . . . . . . . . . . . . . . . . .\n13\n6.2.6\nAndroid CameraX API\n. . . . . . . . . . . . . . . . . . . . . . . . . .\n13\n6.3\nHardware Requirements\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n13\n7\nSYSTEM DESIGNS\n14\n7.1\nUse-Case Diagram\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n14\n7.2\nSystem Architecture . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n15\n8\nIMPLEMENTATION\n17\n8.1\nCoding Environment Used . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n17",
    "chunk_index": 9,
    "page": 8,
    "label": "8"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "ENTATION\n17\n8.1\nCoding Environment Used . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n17\n8.2\nBackend . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n18\n8.3\nFrontend . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n19\n9\nSOFTWARE TESTING\n20\n9.1\nUnit testing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n20\n9.2\nIntegration testing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n21\n9.3\nUser acceptance testing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n22\n9.4\nTest Case\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n22\n9.5\nTest Result\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n24\n9.5.1\nTest Case 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n24\n9.5.2\nTest Case 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n25\n9.5.3\nTest Case 3 . . . . . . . . . . . . . . . ",
    "chunk_index": 10,
    "page": 8,
    "label": "8"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": " . . . . . . . . . . . . . . . . . . . . . . . .\n25\n9.5.3\nTest Case 3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n26\n9.5.4\nTest Case 4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n27\n9.5.5\nTest Case 5 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n28\n9.5.6\nTest Case 6 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n29\niv\n",
    "chunk_index": 11,
    "page": 8,
    "label": "8"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "10 RESULT AND ANALYSIS\n30\n10.1 Result . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n30\n11 SAMPLE CODES\n34\n11.1 Home page\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n34\n11.2 Geofence\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n34\n11.3 Fall Detection . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n35\n11.4 Unauthorized Access Detection . . . . . . . . . . . . . . . . . . . . . . . . . . .\n35\n11.5 SOS Flashlight Signal . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n36\n12 CONCLUSION & FUTURE SCOPE\n37\nv\n",
    "chunk_index": 12,
    "page": 9,
    "label": "9"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "List of Figures\n7.1\nUse case diagram . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n14\n7.2\nArchitecture . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n16\n8.1\nAndroid Studio Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n18\n8.2\nBackend Connectivity . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n18\n8.3\nfrontend . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n19\n9.1\nApp Info . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n24\n9.2\nEmergency Contact . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n25\n9.3\nFall Detection Alert . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n26\n9.4\nSOS Flashlight Trigger . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n27\n9.5\nGeofence\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n28\n9.6\nUnauthorized Access Detection . . . . . . . . . . . .",
    "chunk_index": 13,
    "page": 10,
    "label": "10"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": ". . . . . . . . . . . . . . . . . . . .\n28\n9.6\nUnauthorized Access Detection . . . . . . . . . . . . . . . . . . . . . . . . . . .\n29\n10.1 Home Page\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n30\n10.2 Fall Detection . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n31\n10.3 Geofence\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n32\n10.4 Alert Message . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n33\n11.1 Mainactivity.kt\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n34\n11.2 setsafezoneactivity.kt.kt . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n34\n11.3 Falldetectionactivity.kt\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n35\n11.4 Applockactivity.kt . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n35\n11.5 sostorch.kt . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n36\nvi\n",
    "chunk_index": 14,
    "page": 10,
    "label": "10"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "h.kt . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n36\nvi\n",
    "chunk_index": 15,
    "page": 10,
    "label": "10"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "Chapter 1\nINTRODUCTION\nSafePulse is a real-time human tracking and emergency alert system designed to enhance\npersonal safety through smart monitoring and rapid response features. It combines fall detection,\nlocation tracking, and emergency communication to ensure timely assistance in critical situations.\nThe app detects emergencies such as sudden phone falls and immediately sends alert messages\nalong with the user\u2019s live location and travel history to pre-registered emergency contacts. If no\nresponse is received, the system initiates crowd-sourced assistance by notifying nearby SafePulse\nusers within a specific radius, enabling community-driven support. Additionally, the app includes\nan SOS flashlight signal to help users silently alert others in emergencies.\nTo further strengthen safety, SafePulse offers Geo-Fencing for defining safe zones such as\nhome, school, or workplace. The app monitors user movement and sends alerts if the user fails\nto return to these zones within a predefined",
    "chunk_index": 16,
    "page": 11,
    "label": "11"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "nitors user movement and sends alerts if the user fails\nto return to these zones within a predefined timeframe\u2014making it ideal for children, elderly indi-\nviduals, or people in high-risk environments. It also includes an Unauthorized Access Detection\nfeature, which captures and sends the intruder\u2019s photo and location to emergency contacts after\nmultiple failed unlock attempts. With these features, SafePulse provides a comprehensive and\nproactive safety solution tailored for real-world use.\n1\n",
    "chunk_index": 17,
    "page": 11,
    "label": "11"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "Chapter 2\nPROBLEM STATEMENT\n2.1\nProblem Statement\nThis project focuses on developing an Android-based mobile application, SafePulse, for real-\ntime human tracking and emergency alert management. Built using Android Studio and Kotlin,\nthe system leverages sensor data and geolocation services to detect critical situations such as falls,\nunauthorized access, or unexpected device shutdowns. Upon detection, the app automatically\nalerts pre-registered emergency contacts with the user\u2019s live location and recent travel history,\nensuring rapid response during emergencies.In addition, the system integrates features like Geo-\nFencing for defining safe zones, an SOS flashlight signaling mechanism, and crowd-sourced as-\nsistance to involve nearby users when emergency contacts are unavailable. Unauthorized access\nattempts trigger the front camera to capture the intruder\u2019s image and send it along with loca-\ntion data to emergency contacts. By combining real-time safety monitoring, smart alerting, and",
    "chunk_index": 18,
    "page": 12,
    "label": "12"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "loca-\ntion data to emergency contacts. By combining real-time safety monitoring, smart alerting, and\ncommunity-driven support, SafePulse enhances personal security, especially for children, elderly\nindividuals, and people in high-risk environments.\n2.2\nObjective\nThe objective of the SafePulse project is to develop a real-time safety and emergency alert\nmobile application using Android Studio and Kotlin. It aims to detect critical situations, send au-\ntomatic alerts with live location, and provide proactive security through features like fall detection,\n2\n",
    "chunk_index": 19,
    "page": 12,
    "label": "12"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nPROBLEM STATEMENT\ngeo-fencing, unauthorized access detection, and community support. The system aims to:\n1. To develop a real-time safety and emergency alert system :using Android Studio and\nKotlin that ensures quick and automatic response during critical situations such as falls and\nunauthorized access.\n2. To implement fall detection and emergency alert features:that automatically notify emer-\ngency contacts with the user\u2019s live location and travel history without requiring manual in-\nput.\n3. To integrate Geo-Fencing functionality:allowing users to define safe zones (e.g., home,\nschool, workplace) and receive alerts if the user does not return to the designated area within\na specified timeframe.\n4. To enhance device security through unauthorized access detection: capturing and send-\ning the intruder\u2019s image and location to emergency contacts after multiple failed unlock\nattempts.\n5. To provide an SOS flashlight signaling feature:allowing users to visu",
    "chunk_index": 20,
    "page": 13,
    "label": "13"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "ple failed unlock\nattempts.\n5. To provide an SOS flashlight signaling feature:allowing users to visually signal distress\nin silent or critical situations.\nDepartment of Computer Engineering\n3\n",
    "chunk_index": 21,
    "page": 13,
    "label": "13"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "Chapter 3\nEXISTING SYSTEM\nThe existing system typically include basic safety and emergency features, but lack the com-\nprehensive, integrated, and proactive safety mechanisms that SafePulse offers. Here are some\npoints on previously existing systems.\n3.1\nBasic SOS Apps:\n\u2022 Sent emergency messages manually via button press.\n\u2022 No fall detection or automatic alert triggering.\n3.2\nGPS Tracking Apps:\n\u2022 Provided location sharing only when user actively sent location.\n\u2022 No geofencing or time-bound safety zone alerts.\n3.3\nNo Unified Platform:\n\u2022 Most safety apps offer basic SOS buttons and manual emergency alerts only.\n\u2022 No intruder photo capture or ride start alert mechanisms.\n4\n",
    "chunk_index": 22,
    "page": 14,
    "label": "14"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "Chapter 4\nLITERATURE SURVEY\n4.1\nBase Paper 1\nEnhanced Security Fencing System with Geolocation Tracking[1]- The paper titled \"En-\nhanced Security Fencing System with Geolocation Tracking\" presents a modern approach to\nsurveillance by integrating traditional fencing systems with geolocation-based contact connect-\ning mapping technology. It focuses on enhancing security in sensitive areas such as healthcare\nfacilities and jail asylums, where monitoring individual movements and preventing unauthorized\naccess or escape is critical. The system enables real-time location tracking and mapping of indi-\nviduals within a confined area, providing a proactive solution to safety concerns. It also addresses\nchallenges such as threats to surrounding individuals, unauthorized movement, and system main-\ntenance. Overall, the paper highlights how combining physical barriers with smart tracking tech-\nnologies can significantly improve situational awareness and security management.\n4.2\nBase Paper 2\nSecuri",
    "chunk_index": 23,
    "page": 15,
    "label": "15"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "ies can significantly improve situational awareness and security management.\n4.2\nBase Paper 2\nSecurity in Mobile Network: Issues, Challenges, Solutions[2]- The paper titled \"Security\nin Mobile Network: Issues, Challenges, Solutions\" explores the growing security risks associ-\nated with mobile devices and applications, highlighting the rapid increase in mobile usage and its\nvulnerability to various cyber threats. It provides a comprehensive overview of common mobile\nsecurity problems, such as data breaches, privacy concerns, and unauthorized access, along with\n5\n",
    "chunk_index": 24,
    "page": 15,
    "label": "15"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nLITERATURE SURVEY\ndefensive mechanisms to safeguard user data and maintain trust. This is highly relevant to the\nSafePulse project, as it underscores the importance of integrating strong security measures\u2014such\nas unauthorized access detection, secure data transmission, and privacy protection\u2014within mobile\nsafety applications. By addressing these concerns, SafePulse ensures that its emergency alert sys-\ntem not only provides real-time assistance but also safeguards the sensitive location and personal\ndata of its users.\n4.3\nBase Paper 3\nSmart Device Fall Detection System for Real-Time Monitoring and Emergency Re-\nsponse for Specially Abled Individuals[3]- The paper titled \"Smart Device Fall Detection System\nfor Real-Time Monitoring and Emergency Response for Specially Abled Individuals\" presents a\nsensor-integrated system designed to detect falls in real time and respond rapidly with emergency\nalerts. Using an ESP32 microcontroller connected to various s",
    "chunk_index": 25,
    "page": 16,
    "label": "16"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "ime and respond rapidly with emergency\nalerts. Using an ESP32 microcontroller connected to various sensors (accelerometer, gyroscope,\npressure, cardiotachometer, and GPS), the system achieves high accuracy and a fast response time\nof 1.45 seconds, making it effective for protecting elderly and specially-abled individuals. This\nresearch is closely related to the SafePulse project, which also incorporates real-time fall detection\nand emergency alerting features. While the paper focuses on wearable hardware, SafePulse im-\nplements fall detection via smartphone sensors using Android-based logic, delivering alerts with\nlive location to emergency contacts and nearby users. Both systems share the common goal of en-\nhancing user safety through automated monitoring and quick response, making this study a strong\ntechnical foundation for validating and improving SafePulse\u2019s fall detection functionality.\n4.4\nBase Paper 4\nFall Detector Device for Improved Safety and Independence[4]- The paper title",
    "chunk_index": 26,
    "page": 16,
    "label": "16"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "lity.\n4.4\nBase Paper 4\nFall Detector Device for Improved Safety and Independence[4]- The paper titled \"Fall\nDetector Device for Improved Safety and Independence\" introduces a wearable wrist-worn fall\ndetection device designed to support the elderly and individuals with limited mobility. It uses ad-\nvanced sensors like gyroscopes and vibration motion shock sensors to detect falls accurately while\nDepartment of Computer Engineering\n6\n",
    "chunk_index": 27,
    "page": 16,
    "label": "16"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nLITERATURE SURVEY\nminimizing false alarms. Integrated with an Android application, it ensures real-time alerts are sent\nto caregivers or emergency services, enhancing responsiveness and user safety. This study aligns\nclosely with the SafePulse project, which also provides real-time fall detection and emergency\nnotifications through an Android app. While the paper focuses on hardware wearables, SafePulse\nachieves similar goals using mobile phone sensors, offering a more accessible solution for users\nwithout specialized equipment. Both approaches emphasize timely intervention, independence,\nand improved quality of life for vulnerable populations.\n4.5\nBase Paper 5\nThe European emergency number 112: Exploring the potential of crowd-sourced in-\nformation for emergency management[5]- The study \"The European Emergency Number 112:\nExploring the Potential of Crowd-Sourced Information for Emergency Management\" highlights\nthe importance of combining structured em",
    "chunk_index": 28,
    "page": 17,
    "label": "17"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "d-Sourced Information for Emergency Management\" highlights\nthe importance of combining structured emergency call systems with citizen-generated data to en-\nhance situational awareness during crises. It found that while social media offers large volumes\nof real-time information, it often lacks accuracy and requires significant processing. In contrast,\ndata collected through emergency numbers like 112 is more reliable and actionable. This insight\nreinforces the approach taken by the SafePulse app, particularly its \"Crowd-Sourced Assistance\"\nfeature, which combines automated fall detection and real-time location alerts with a network of\nnearby users within a 5 km radius. By structuring alerts through sensor-based inputs and veri-\nfying responses through app-based confirmations, SafePulse ensures that crowd-sourced help is\nboth timely and trustworthy. Integrating lessons from the 112 system, SafePulse emphasizes a\nhybrid emergency response model that leverages both mobile technology and co",
    "chunk_index": 29,
    "page": 17,
    "label": "17"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": " SafePulse emphasizes a\nhybrid emergency response model that leverages both mobile technology and community support\nto improve safety and responsiveness for vulnerable users.\nDepartment of Computer Engineering\n7\n",
    "chunk_index": 30,
    "page": 17,
    "label": "17"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "Chapter 5\nPROPOSED SYSTEM\n5.1\nSolution\nSafePulse app is a real-time safety and emergency response system designed to protect\nspecially-abled individuals, elderly people, children, and those in high-risk situations. The system\nleverages mobile technology, smart sensors, and community support features to provide timely\nassistance and improve personal safety.The core of the proposed system integrates the following\nsmart features:\n1. Fall Detection System:\nUsing built-in mobile sensors like accelerometers and gyroscopes, the app detects sudden\nfalls. Upon detection, it automatically sends real-time alerts and the user\u2019s live location to\nup to five emergency contacts and nearby SafePulse users within a 5 km radius for rapid\nassistance.\n2. Unauthorized Access Detection:\nThe app includes a 4-digit security lock. After three failed unlock attempts, it captures a\nphoto of the intruder using the front camera, saves it to the phone gallery, and sends the\nimage via SMS to registered emergency cont",
    "chunk_index": 31,
    "page": 18,
    "label": "18"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "ront camera, saves it to the phone gallery, and sends the\nimage via SMS to registered emergency contacts.\n8\n",
    "chunk_index": 32,
    "page": 18,
    "label": "18"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nPROPOSED SYSTEM\n3. Journey Monitoring with Start Ride Feature:\nWhen the user taps the \u201cStart Ride\u201d button, the app sends a message to emergency contacts\nwith the user\u2019s current location and indicates the journey has begun. This ensures someone\nis informed of the user\u2019s movement in real-time.\n4. Geo-Fencing and Safe Zones:\nUsers can define safe zones such as home, school, or workplace using Google Maps. If\nthe user does not enter the safe zone , an alert message is sent to emergency contacts. The\nsystem also alerts when the user enters a safe zone.\n5. SOS Flashlight Functionality:\nThe SOS Flashlight feature in the SafePulse app is designed to provide a silent yet powerful\nway to signal distress in critical situations. When activated, the phone\u2019s flashlight blinks\nin the internationally recognized SOS Morse code pattern (\u00b7\u00b7\u00b7 \u2013\u2013\u2013 \u00b7\u00b7\u00b7), enabling users to\nvisually alert nearby individuals or rescuers even in complete darkness or low-visibility\nenvironments.",
    "chunk_index": 33,
    "page": 19,
    "label": "19"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "ually alert nearby individuals or rescuers even in complete darkness or low-visibility\nenvironments. This functionality is especially useful when the user is unable to speak or\nmove freely, offering a quick and accessible method to draw attention and indicate the need\nfor urgent help.\n6. Crowd-Sourced Assistance:\nIn emergencies, especially when falls are detected, the app notifies SafePulse users within a\n5 km radius along with the emergency contacts. This local network of users helps increase\nthe chances of someone nearby providing assistance quickly.\nDepartment of Computer Engineering\n9\n",
    "chunk_index": 34,
    "page": 19,
    "label": "19"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "Chapter 6\nSYSTEM REQUIREMENT SPECIFICATION\n6.1\nOverall Description\nSafePulse is a real-time safety and emergency response app designed for specially-abled\nindividuals, elderly people, children, and those in high-risk situations. It uses mobile sensors,\nGPS, and SMS to detect emergencies like falls or unauthorized access and automatically notifies\nemergency contacts with real-time location updates. Features include fall detection, safe zone\nalerts, ride monitoring, crowd-sourced assistance, and an SOS flashlight that blinks in Morse code.\nThe app is user-friendly, reliable, and built to provide proactive safety support anytime, anywhere.\n6.1.1\nProduct Perspective\nSafePulse is a standalone Android application that functions as a personal safety tool. It\nintegrates with smartphone hardware such as GPS, accelerometer, gyroscope, and flashlight to\nmonitor user activity and detect emergency events. The app does not rely on external hardware but\ncan operate alongside cloud services (e.g., Fir",
    "chunk_index": 35,
    "page": 20,
    "label": "20"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "ents. The app does not rely on external hardware but\ncan operate alongside cloud services (e.g., Firebase) for storing emergency contacts and sending\nalerts. Designed for ease of use and real-time responsiveness, SafePulse aims to enhance personal\nsafety without requiring continuous user interaction.\n6.1.2\nProduct Function\nThe system provides the following key functions:\n10\n",
    "chunk_index": 36,
    "page": 20,
    "label": "20"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSYSTEM REQUIREMENT SPECIFICATION\n\u2022 User Registration and Authentication\n\u2022 Emergency Contact Management\n\u2022 Fall Detection System\n\u2022 Geo-Fencing for Safe Zones\n\u2022 Unauthorized Access Detection\n\u2022 SOS Flashlight Functionality\n\u2022 Crowd-Sourced Assistance\n\u2022 Start Ride Alert System\n6.2\nSystem Requirements\n\u2022 Operating System: Android 8.0 or Higher\n\u2022 Development Platform: Android Studio (latest version)\n\u2022 Programming Language: Kotlin\n\u2022 Backend: Firebase (Authentication, Realtime Database, Firestore, Cloud Functions)\n\u2022 Map Integration: Google Maps API\n\u2022 SMS And Location: Android Location Services, SMS Manager API\n\u2022 Camera Access: Android CameraX API\n6.2.1\nAndroid Studio\nAndroid Studio is the official integrated development environment (IDE) for Android ap-\nplication development, developed by Google. It offers a complete suite of tools for designing,\ncoding, testing, and debugging Android apps. SafePulse is developed using Android Studio due to\nDepartment of Computer",
    "chunk_index": 37,
    "page": 21,
    "label": "21"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "nd debugging Android apps. SafePulse is developed using Android Studio due to\nDepartment of Computer Engineering\n11\n",
    "chunk_index": 38,
    "page": 21,
    "label": "21"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSYSTEM REQUIREMENT SPECIFICATION\nits powerful features such as real-time code editing, XML-based UI design, built-in Android emu-\nlator, and seamless integration with Firebase and Google APIs. These capabilities enable efficient\ndevelopment and testing of SafePulse\u2019s safety features, including location tracking, emergency\nalerts, and sensor-based functionalities.\n6.2.2\nKotlin\nKotlin is a modern, concise, and statically typed programming language officially supported\nby Google for Android app development. It offers interoperability with Java, enhanced readability,\nand safer code with reduced boilerplate. SafePulse is developed using Kotlin to take advantage of\nits robust features, which support efficient implementation of real-time safety functionalities, such\nas emergency alerts, location tracking, and sensor integrations.\n6.2.3\nFirebase\nFirebase is a platform developed by Google that provides a variety of tools and services for\napp development, includ",
    "chunk_index": 39,
    "page": 22,
    "label": "22"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "atform developed by Google that provides a variety of tools and services for\napp development, including real-time databases, authentication, cloud messaging, and analytics.\nIn the SafePulse app, Firebase is used to manage user data securely, authenticate users, store emer-\ngency contact information, and support real-time notifications and alerts, ensuring a responsive and\nreliable safety experience.\n6.2.4\nGoogle Maps API\nGoogle Maps API is integrated into the SafePulse app to support real-time location tracking\nand geofencing functionalities. It enables users to define Safe Zones using map-based selection\nand helps the app monitor whether the user enters or exits these predefined zones. This feature\nenhances user safety by providing timely alerts based on location changes, especially for children,\nelderly individuals, and those in high-risk environments.\nDepartment of Computer Engineering\n12\n",
    "chunk_index": 40,
    "page": 22,
    "label": "22"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "g\n12\n",
    "chunk_index": 41,
    "page": 22,
    "label": "22"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSYSTEM REQUIREMENT SPECIFICATION\n6.2.5\nSMS and Location Services\nThe SafePulse app uses Android Location Services to accurately track the user\u2019s real-time\nlocation. In case of an emergency, it leverages the SMS Manager API to send automated alert mes-\nsages, along with the live location link, to the user\u2019s pre-added emergency contacts. This ensures\ntimely communication even without internet access, enhancing reliability in critical situations.\n6.2.6\nAndroid CameraX API\nThe SafePulse app utilizes the Android CameraX API to capture images discreetly in re-\nsponse to unauthorized access attempts. When multiple failed app lock attempts are detected, the\nfront camera is triggered to take a photo of the intruder. This image is then saved to the device\ngallery and sent to the user\u2019s emergency contacts, enhancing security and evidence collection.\n6.3\nHardware Requirements\nTo ensure optimal functionality, the SafePulse app requires a smartphone with essential h",
    "chunk_index": 42,
    "page": 23,
    "label": "23"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "quirements\nTo ensure optimal functionality, the SafePulse app requires a smartphone with essential hard-\nware components, including a gyroscope and accelerometer for fall detection, GPS module for\nreal-time location tracking, a camera (front-facing) for intruder capture, flashlight for SOS sig-\nnaling, and internet connectivity (Wi-Fi or mobile data) for cloud integration and communication.\nThe device should also support SMS capabilities to send alerts to emergency contacts.\nDepartment of Computer Engineering\n13\n",
    "chunk_index": 43,
    "page": 23,
    "label": "23"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "Chapter 7\nSYSTEM DESIGNS\n7.1\nUse-Case Diagram\nThe use case diagram for the SafePulse app illustrates the interaction between the user and\nthe core safety features of the system. It shows how users can perform actions such as adding\nemergency contacts, starting a ride, setting a geofence, triggering an SOS alert, and more. It also\nrepresents automated system actions like fall detection, unauthorized access alerts, and location\ntracking.\nFig. 7.1: Use case diagram\n14\n",
    "chunk_index": 44,
    "page": 24,
    "label": "24"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSYSTEM DESIGNS\n7.2\nSystem Architecture\n\u2022 The SafePulse system architecture is designed with a layered approach to ensure efficient\ninteraction between the user interface, application logic, hardware sensors, and external ser-\nvices. Users interact with key safety features such as Fall Alert, Start Ride, SOS Flashlight,\nSet Safe Zone, and App Lock. These inputs trigger various application logic components\nincluding fall detection, intruder detection, geo-fencing timers, ride monitoring, and SMS\nalert mechanisms.\nThe app leverages device hardware like the gyroscope, GPS, front camera, and flashlight\nfor real-time monitoring and action. In parallel, it integrates with external services such as\nFirebase Realtime Database, Google Maps API, Android Location Services, SMS Manager\nAPI, and CameraX API for data storage, location tracking, and message dispatch. This\narchitecture ensures real-time safety alerts and efficient emergency response with minimal\nuser e",
    "chunk_index": 45,
    "page": 25,
    "label": "25"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "is\narchitecture ensures real-time safety alerts and efficient emergency response with minimal\nuser effort.\nDepartment of Computer Engineering\n15\n",
    "chunk_index": 46,
    "page": 25,
    "label": "25"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSYSTEM DESIGNS\nFig. 7.2: Architecture\nDepartment of Computer Engineering\n16\n",
    "chunk_index": 47,
    "page": 26,
    "label": "26"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "Chapter 8\nIMPLEMENTATION\nThe implementation of the SafePulse app was carried out using Android Studio with Kotlin\nas the primary programming language. The app integrates multiple Android APIs such as Cam-\neraX for unauthorized access detection, SMS Manager and Location Services for sending alerts\nwith real-time location, and the Google Maps API for geofencing and tracking purposes. Fire-\nbase is used for user authentication and cloud data storage. The modular approach in the app\u2019s\narchitecture allows each feature\u2014such as fall detection, SOS flashlight, Safe Zone alerts, and\ncrowd-sourced assistance\u2014to function independently while sharing critical data. The UI is de-\nsigned to be intuitive and accessible for children, elderly users, and people with special needs,\nensuring ease of use in emergency situations.\n8.1\nCoding Environment Used\nThe SafePulse application was developed using Android Studio, the official Integrated De-\nvelopment Environment (IDE) for Android development. The projec",
    "chunk_index": 48,
    "page": 27,
    "label": "27"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": " Studio, the official Integrated De-\nvelopment Environment (IDE) for Android development. The project utilized Kotlin as the pri-\nmary programming language, offering modern syntax and improved safety over Java. The app\nleverages Android SDK tools, Emulators, and Gradle for build automation. Firebase services were\nintegrated for backend functionalities such as authentication and real-time database management.\nThe development environment also incorporated Google Maps API, CameraX, SMS Manager, and\nLocation Services APIs for implementing safety and alert features.\n17\n",
    "chunk_index": 49,
    "page": 27,
    "label": "27"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nIMPLEMENTATION\nFig. 8.1: Android Studio Interface\n8.2\nBackend\nThe backend of the SafePulse application is powered by Firebase, which offers real-time\ndatabase management, cloud storage, authentication, and messaging services. Firebase enables\nseamless user data synchronization, location updates, emergency contact management, and real-\ntime alert notifications. It also supports push notifications for fall detection and SOS alerts through\nFirebase Cloud Messaging (FCM). The integration with Firebase ensures a secure and scalable\nbackend infrastructure that enhances the app\u2019s responsiveness and reliability in emergency scenar-\nios.\nFig. 8.2: Backend Connectivity\nDepartment of Computer Engineering\n18\n",
    "chunk_index": 50,
    "page": 28,
    "label": "28"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nIMPLEMENTATION\n8.3\nFrontend\nThe frontend of the SafePulse app is developed using Kotlin in Android Studio, offering a\nuser-friendly and accessible interface tailored for elderly users, specially-abled individuals, chil-\ndren, and users in high-risk environments. The design emphasizes simplicity, clear navigation, and\nlarge buttons for critical features such as SOS activation, emergency contact access, geofencing\nsetup, and ride tracking. The integration of Google Maps API, CameraX, and Android Location\nServices ensures real-time interaction, while the Material Design components enhance usability\nand visual consistency across different devices.\nFig. 8.3: frontend\nDepartment of Computer Engineering\n19\n",
    "chunk_index": 51,
    "page": 29,
    "label": "29"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "Chapter 9\nSOFTWARE TESTING\nThe SafePulse application underwent rigorous software testing to ensure its functionality,\nreliability, and user safety. Testing included unit testing, integration testing, and user acceptance\ntesting (UAT). Each module\u2014such as SOS alerts, geofencing, ride tracking, and unauthorized\naccess detection\u2014was individually tested for correctness. Real-time features like live location\nsharing and SMS alerts were validated in various network conditions to ensure consistency. Addi-\ntionally, manual testing on multiple Android devices was performed to verify compatibility and UI\nresponsiveness. Edge cases, including power loss, sensor misfires, and permission denials, were\nsimulated to ensure graceful error handling and app recovery.The testing includes:\n\u2022 Unit testing\n\u2022 Integration testing\n\u2022 User acceptance testing\n9.1\nUnit testing\nUnit Testing in the SafePulse app was conducted to ensure the reliability and correctness\nof individual components and features. Each core ",
    "chunk_index": 52,
    "page": 30,
    "label": "30"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "onducted to ensure the reliability and correctness\nof individual components and features. Each core functionality\u2014such as fall detection, SOS\nflashlight activation, geo-fencing alerts, emergency SMS sending, and unauthorized access detec-\ntion\u2014was tested independently to verify its logic and behavior. Mock data and simulated inputs\n20\n",
    "chunk_index": 53,
    "page": 30,
    "label": "30"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSOFTWARE TESTING\nwere used to test sensor responses, location accuracy, camera activation, and SMS delivery with-\nout relying on external dependencies.\nTest ID\nFunction Tested\nExpected Output\nUT01\nEmergency contact in-\nput validation\nValid contact added to\ndatabase\nUT02\nFall detection algorithm\ntrigger\nFall\nevent\ncorrectly\nidentified\nUT03\nSOS flashlight activa-\ntion\nFlashlight\nblinks\nin\nSOS pattern\nUT04\nGeo-fencing\ntime\ncheck logic\nAlert triggered if user\nnot in safe zone\nUT05\nUnauthorized\naccess\ndetection\nIntruder photo captured\nand SMS sent\nTable 9.1: Unit Testing Cases for SafePulse App\n9.2\nIntegration testing\nIntegration Testing for the SafePulse app was performed to verify that different modules and\ncomponents work seamlessly together as a unified system. After ensuring that individual units\nlike fall detection, SOS flashlight, geo-fencing, camera capture, and SMS alert were functioning\ncorrectly through unit testing, integration testing was used ",
    "chunk_index": 54,
    "page": 31,
    "label": "31"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "apture, and SMS alert were functioning\ncorrectly through unit testing, integration testing was used to assess the interactions between these\ncomponents.\nDepartment of Computer Engineering\n21\n",
    "chunk_index": 55,
    "page": 31,
    "label": "31"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSOFTWARE TESTING\nTest ID\nModules Integrated\nExpected Result\nIT01\nContact input + Fire-\nbase database\nContact saved and re-\ntrievable\nIT02\nFall detection + SMS\nmodule\nSMS sent when fall de-\ntected\nIT03\nGeo-fence\n+\nGoogle\nMaps API\nAlert triggered outside\nsafe zone\nIT04\nApp Lock + Camera\nmodule\nPhoto\ncaptured\nafter\nfailed attempts\nIT05\nSOS button + Flash-\nlight\nFlashlight\nblinks\nin\nSOS pattern\nTable 9.2: Integration Testing Cases for SafePulse App\n9.3\nUser acceptance testing\nUser Acceptance Testing (UAT) was conducted to ensure that the SafePulse app meets user\nexpectations and performs effectively in real-world scenarios. The app was tested by a sample\ngroup including elderly individuals, specially-abled users, parents of children, and users in high-\nrisk professions. Testers evaluated core functionalities such as fall detection, SOS flashlight sig-\nnaling, geo-fencing, camera-based intruder detection, and emergency SMS alerts.\nFeedback focused on ease o",
    "chunk_index": 56,
    "page": 32,
    "label": "32"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": ", geo-fencing, camera-based intruder detection, and emergency SMS alerts.\nFeedback focused on ease of use, reliability, and responsiveness of the system during emer-\ngencies. Based on user input, minor UI adjustments and feature refinements were made to improve\nclarity and performance. UAT confirmed that the app aligns well with its goal of enhancing per-\nsonal safety and emergency response.\n9.4\nTest Case\nThe SafePulse app was tested for key functionalities like app launch, emergency contact sav-\ning, fall detection, SOS flashlight, geo-fencing alerts, and unauthorized access detection. These\ntests ensured reliable and timely emergency responses.\nDepartment of Computer Engineering\n22\n",
    "chunk_index": 57,
    "page": 32,
    "label": "32"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSOFTWARE TESTING\nID\nDescription\nExpected Result\nTC01\nApp launch from de-\nvice\nHome screen displayed\nTC02\nAdd emergency contact\nContact saved success-\nfully\nTC03\nFall detection alert\nSMS sent to emergency\ncontacts\nTC04\nSOS Flashlight trigger\nFlashlight blinks SOS\npattern\nTC05\nGeo-fence\nAlert sent to emergency\ncontacts\nTC06\nUnauthorized\naccess\ndetection\nIntruder photo captured\nand sent\nTable 9.3: Key Test Cases for SafePulse App\nDepartment of Computer Engineering\n23\n",
    "chunk_index": 58,
    "page": 33,
    "label": "33"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSOFTWARE TESTING\n9.5\nTest Result\n9.5.1\nTest Case 1\nFig. 9.1: App Info\nFig 8.1 shows the result of Test case 1. App launched from the device. So, test case 1 is\nsuccessfully passed.\nDepartment of Computer Engineering\n24\n",
    "chunk_index": 59,
    "page": 34,
    "label": "34"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSOFTWARE TESTING\n9.5.2\nTest Case 2\nFig. 9.2: Emergency Contact\nFig 8.2 shows the result of Test case 2. Emergency contact added. So, test case 2 is success-\nfully passed.\nDepartment of Computer Engineering\n25\n",
    "chunk_index": 60,
    "page": 35,
    "label": "35"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSOFTWARE TESTING\n9.5.3\nTest Case 3\nFig. 9.3: Fall Detection Alert\nFig 8.3 shows the result of Test case 3. Fall detection alert sent successfully. So, test case 3\nis successfully passed.\nDepartment of Computer Engineering\n26\n",
    "chunk_index": 61,
    "page": 36,
    "label": "36"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSOFTWARE TESTING\n9.5.4\nTest Case 4\nFig. 9.4: SOS Flashlight Trigger\nFig 8.4 shows the result of Test case 4. SOS Flashlight triggered. So, test case 4 is success-\nfully passed.\nDepartment of Computer Engineering\n27\n",
    "chunk_index": 62,
    "page": 37,
    "label": "37"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSOFTWARE TESTING\n9.5.5\nTest Case 5\nFig. 9.5: Geofence\nFig 8.5 shows the result of Test case 5. Geofence added successfully. So, test case 5 is\nsuccessfully passed.\nDepartment of Computer Engineering\n28\n",
    "chunk_index": 63,
    "page": 38,
    "label": "38"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSOFTWARE TESTING\n9.5.6\nTest Case 6\nFig. 9.6: Unauthorized Access Detection\nFig 8.6 shows the result of Test case 6. Unauthorized access detection triggered. So, test\ncase 6 is successfully passed.\nDepartment of Computer Engineering\n29\n",
    "chunk_index": 64,
    "page": 39,
    "label": "39"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "Chapter 10\nRESULT AND ANALYSIS\n10.1\nResult\nFig. 10.1: Home Page\n30\n",
    "chunk_index": 65,
    "page": 40,
    "label": "40"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nRESULT AND ANALYSIS\nThe Home Page of the SafePulse app serves as the central hub, offering users quick access to\nkey safety features such as fall detection, SOS flashlight, emergency contacts, ride monitoring, and\ngeo-fencing. With a simple and intuitive interface, users can activate or manage essential safety\ntools directly from the home screen, ensuring immediate response during emergencies.\nFig. 10.2: Fall Detection\nFall Detection is integrated into the SafePulse home page, allowing users to activate it easily.\nOnce enabled, the app monitors sudden movements and triggers alerts in case of a suspected fall,\nensuring quick help by notifying emergency contacts automatically.\nDepartment of Computer Engineering\n31\n",
    "chunk_index": 66,
    "page": 41,
    "label": "41"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nRESULT AND ANALYSIS\nFig. 10.3: Geofence\nThe Geofence feature allows users to set a safe zone using Google Maps. If the user doesn\u2019t\nreach this zone, the app sends an automatic alert to emergency contacts. The Start Ride button\nsends a message with the user\u2019s live location at the beginning of a journey, helping contacts monitor\ntheir safety in real time. Both features work together to ensure timely alerts and location tracking.\nDepartment of Computer Engineering\n32\n",
    "chunk_index": 67,
    "page": 42,
    "label": "42"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nRESULT AND ANALYSIS\nFig. 10.4: Alert Message\nAutomated SMS alerts from the SafePulse app include messages for two core features: Ge-\nofence Alert (notifying that the user has entered the Safe Zone) and Start Ride (sending live lo-\ncation links when the journey starts). These messages help emergency contacts track the user\u2019s\nsafety and movement in real time.\nThe SafePulse app is a safety-focused mobile application designed to assist specially-abled\nindividuals, elderly users, children, and those in high-risk environments. It integrates various\nsmart features such as fall detection, SOS flashlight, geo-fencing, emergency SMS alerts, and live\nlocation sharing to ensure user safety.\nDepartment of Computer Engineering\n33\n",
    "chunk_index": 68,
    "page": 43,
    "label": "43"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "Chapter 11\nSAMPLE CODES\n11.1\nHome page\nFig. 11.1: Mainactivity.kt\n11.2\nGeofence\nFig. 11.2: setsafezoneactivity.kt.kt\n34\n",
    "chunk_index": 69,
    "page": 44,
    "label": "44"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSAMPLE CODES\n11.3\nFall Detection\nFig. 11.3: Falldetectionactivity.kt\n11.4\nUnauthorized Access Detection\nFig. 11.4: Applockactivity.kt\nDepartment of Computer Engineering\n35\n",
    "chunk_index": 70,
    "page": 45,
    "label": "45"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nSAMPLE CODES\n11.5\nSOS Flashlight Signal\nFig. 11.5: sostorch.kt\nDepartment of Computer Engineering\n36\n",
    "chunk_index": 71,
    "page": 46,
    "label": "46"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "Chapter 12\nCONCLUSION & FUTURE SCOPE\nThe SafePulse app successfully addresses the growing need for personal safety solutions,\nespecially for vulnerable groups such as children, elderly individuals, and specially-abled users.\nBy integrating features like fall detection, SOS flashlight, unauthorized access alerts, geo-fencing,\nand emergency SMS with live location, the app offers a proactive and real-time safety response\nsystem. Its user-friendly interface and background functionalities ensure that users receive help\nwhen they need it most, without any manual effort.\nFuture enhancements to the system will focus on several key areas:\n\u2022 Voice-Activated Emergency Triggers: Voice-activated emergency triggers allow users to\ninitiate an SOS alert using specific voice commands without physically interacting with\ntheir phone. This feature is especially helpful for individuals who may be in distress, im-\nmobilized, or visually impaired. When a predefined keyword or phrase (e.g., \u201cHelp me\u201d\nor \u201cSafe",
    "chunk_index": 72,
    "page": 47,
    "label": "47"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": ", im-\nmobilized, or visually impaired. When a predefined keyword or phrase (e.g., \u201cHelp me\u201d\nor \u201cSafePulse SOS\u201d) is detected, the app immediately sends an alert with the user\u2019s live\nlocation to their emergency contacts, enhancing hands-free safety and response time.\n\u2022 Integration with Wearable Devices: SafePulse integrates with wearable devices such as\nsmartwatches and fitness bands to enhance accessibility and real-time emergency response.\nThis allows users to trigger SOS alerts, monitor vital signs, and detect falls directly from\ntheir wearable device. The integration ensures continuous safety monitoring, even when the\n37\n",
    "chunk_index": 73,
    "page": 47,
    "label": "47"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "College of Engineering, Cherthala\nCONCLUSION & FUTURE SCOPE\nphone is not easily accessible, making it particularly valuable for children, elderly individu-\nals, and those in high-risk environments.\n\u2022 AI-Based Movement and Behavior Prediction: SafePulse can incorporate AI algorithms\nto analyze users\u2019 movement patterns and predict unusual or risky behaviors, such as sudden\nstops, irregular walking, or deviations from routine paths. This predictive feature enhances\nsafety by triggering proactive alerts before an emergency occurs, enabling faster response\nand prevention.\n\u2022 Real-time Video Streaming to Emergency Contacts: Enable users to stream live video to\ntheir emergency contacts during distress situations for better situational understanding.\n\u2022 Safe Route Recommendation: Use AI and crowd-sourced data to guide users through safer\npaths or areas based on real-time crime or incident reports.\nSafePulse stands as a reliable companion for personal safety, offering proactive protection\nand tim",
    "chunk_index": 74,
    "page": 48,
    "label": "48"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "\nSafePulse stands as a reliable companion for personal safety, offering proactive protection\nand timely assistance when it matters most.\nDepartment of Computer Engineering\n38\n",
    "chunk_index": 75,
    "page": 48,
    "label": "48"
  },
  {
    "doc_id": "safepulse report.pdf",
    "chunk_text": "References\n[1] Giuseppe\nLelow-\nThe\nEuropean\nEmergency\nNumber\n112\nExploring\nThe\nPotential\nOf\nCrowd\nSourced\nInformation\nFor\nEmergency\nManagement\nDOI:10.1109/ICALTER61411.2023.10372884\n[2] Medha Wyawhahare- Enhanced Security Fencing System With Geolocation Tracking,\n2024. DOI:10.1109/ACCESS.2021.3113172\n[3] Ruby Dahiya- Security In Mobile Network: Issues, Challenges And Solutions (Unau tho-\nrized Access Detection), 2024. DOI:10.1109/I2CT61223.2024.10543337\n[4] NRajesh- Smart Device Fall Detection System For Real Time Monitoring And Emergency\nRe- sponse For Specially Abled Individuals, 2024. DOI: https://aclanthology.org/2021.nllp-\n1.11\n[5] Tunkunorizan- Fall Detector Device For Improved Safety For Independence, 2024. DOI:\n10.1109/IATMSI60426.2024.10502550\n39\n",
    "chunk_index": 76,
    "page": 49,
    "label": "49"
  }
]